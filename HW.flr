// hardware platforms specification

Architecture[bits=>{8,16,32,64}].
CPU[arch=>Architecture,bits=>{8,16,32,64},vendor].

///////////////////////////////////////////////////////////////////////////

IntelArchitecture :: Architecture.

i80::IntelArchitecture[bits=>8].
x86::IntelArchitecture[bits=>16].
i386::x86[bits=>32].
x86_64::i386[bits=>64].
amd64::x86_64.
{ia64,Itanium}::x86_64.

IntelCPU::CPU[vendor=>Intel].

i8080::IntelCPU[arch=>i80].
Z80::i8080[vendor=>Zilog].
K580VM80::i8080[vendor=>Russia].

i8086::IntelCPU[arch=>x86].
i8088::i8086[bus_width=>8].
i80286::i8086.
i386::i80286[arch=>i386].
i486::i386.

i586::i486.
Pentium::i586.

i686::i586[arch=>x86_64].
PentiumII::i686.

iCore::i686.
'Intel Core 2 Quad 9300'::iCore.
Corei3::iCore.
Corei5::iCore.
Corei7::iCore.
Atom::IntelCPU[arch=>i386].
Xeon::IntelCPU[arch=>IA64].

AMDCPU::IntelCPU[vendor=>AMD].
Athlon::AMDCPU.
Phenom::AMDCPU.
Turion::AMDCPU.

///////////////////////////////////////////////////////////////////////////

AVR::Architecture[bits=>8,vendor=>Atmel].

ATmega:CPU[arch=>AVR].
ATmega32::ATmega.
ATmega64::ATmega.
ATmega128::ATmega.
ATmega256::ATmega.

///////////////////////////////////////////////////////////////////////////

PIC::Architecture[bits=>8,vendor=>Microchip].

///////////////////////////////////////////////////////////////////////////

ARM::Architecture[bits=>32].
ARM64::ARM[bits=>64].
armel::ARM[fp=>softfloat].
armhf::armel[fp=>hardfloat].

CortexA::CPU[arch=>ARM].
CortexM::CPU[arch=>ARM].

CortexM4::CortexM.

Allwinner::CortexA.
MTK::CortexA.

STM32::CortexM.
STM32F4::{STM32,CortexM4}.

EmbeddedComputer::Computer.

'ARM1176JZ-F'::CPU[arch=>ARM].
BCM2835::'ARM1176JZ-F'[vendor=Broadcom,HZ=700].

RaspberryPi::EmbeddedComputer[cpu=>BCM2835].
RaspberryPiA::RaspberryPi[ram=>256,gpio=>26,usb=>1,eth=0].
'RaspberryPiA+'::RaspberryPiA[gpio=>40].
RaspberryPiB::RaspberryPiA[ram=>512,usb=>2,eth=1].
'RaspberryPiB+'::RaspberryPiB[gpio=>40,usb=>4].

OrangePi::RaspberryPi[cpu=>Allwinner,vendor=China].

SmartClock::Computer[wearable].
Pebble::SmartClock[cpu=>STM32F4,os=>RTOS].

///////////////////////////////////////////////////////////////////////////

MIPS::Architecture.

///////////////////////////////////////////////////////////////////////////

// ?C:CPU[bits=>?B] :- ?C[arch=>?A],?A[bits=>?B]. // CPU bits infer
